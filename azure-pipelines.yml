
variables:
  websiteManifestName: 'websitemanifest'

stages:

  - stage: Build
    displayName: Build stage
    
    jobs:
    - job: Publish Build Artifacts
      pool:      
        vmImage: 'Ubuntu-16.04'
    steps:
      - task: PublishPipelineArtifact@0
      inputs:
        artifactName: $(websiteManifestName)
        targetPath: /devops/website 

  - stage: ProvisionEnvironment
    displayName: Provision Env with Terraform
    variables:
      - group: 'Terraform'
  
    jobs:
    - job: TransformConfiguration
      pool:      
        vmImage: 'Ubuntu-16.04'
      steps:
      - task: qetza.replacetokens.replacetokens-task.replacetokens@3
        displayName: 'Replace tokens in **/*.tfvars'
        inputs:
          rootDirectory: ./env
          targetFiles: '**/*.tfvars'
          
          targetFiles: |
            **/*.tfvars
            $(System.ArtifactsDirectory)/$(websiteManifestName)/*

      - script: |
          terraform init \
            -backend-config="resource_group_name=$(tf-backend-resource-group)" \
            -backend-config="storage_account_name=$(tf-backend-storage-account)" \
            -backend-config="container_name=$(tf-backend-container-name)" \
            -backend-config="key=$(tf-backend-state-file-name)" \
            -backend-config="access_key=$(tf-backend-state-file-key)"
    
        workingDirectory: ./env
        displayName: 'Terraform init'
  
      - script: terraform apply -auto-approve -var-file="terraform.tfvars"
      
        workingDirectory: ./env
        displayName: 'Terraform apply'

      - script: |
          echo "$(terraform output kube_config)\"" >> .kubeconfig
          kubectl create namespace uat --kubeconfig .kubeconfig
        
        workingDirectory: ./env
        displayName: 'kubectl apply - allowed'


  